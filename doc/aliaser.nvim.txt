*aliaser.nvim.txt*

==============================================================================
Lua module: aliaser                                     *aliaser.nvim-aliaser*

list({module_names})                                          *aliaser.list()*
  Gets aliases.

  Parameters: ~
    {module_names} (string[]) names to require module

  Return: ~
    (AliaserAlias[]) |AliaserAlias|

to_string({alias})                                       *aliaser.to_string()*
  Converts an alias to string.

  Parameters: ~
    {alias} (AliaserAlias) |AliaserAlias|

  Return: ~
    (string) lua expression to call the alias

==============================================================================
STRUCTURE                                             *aliaser.nvim-STRUCTURE*

AliaserAlias                                                    *AliaserAlias*

- {name} (string)
- {module_name} (string)
- {file_path} (string) alias function defined file path
- {start_row} (integer) alias function defined positon row
- {params_count} (integer) alias function parameter count
- {call} (fun(...):any) call alias function.

==============================================================================
EXAMPLES                                               *aliaser.nvim-EXAMPLES*

./lua/aliaser/test/example.lua:
>lua
  local M = {}

  function M.clear_messages()
    vim.cmd.message("clear")
  end

  return M
<

usage:
>lua
  local aliaser = require("aliaser")

  local alias = aliaser.list({ "aliaser.test.example" })[1]
  alias.call()
<

==============================================================================
vim:tw=78:ts=8:ft=help
